Terminals unused in grammar

   TOKEN_ERROR


State 72 conflicts: 1 reduce/reduce
State 126 conflicts: 1 shift/reduce


Grammar

    0 $accept: program UNDEFINED

    1 program: gl_dec program
    2        | /* empty */

    3 gl_dec: var_dec ';'
    4       | vetor_dec ';'
    5       | func_dec

    6 var_dec: data_type TK_IDENTIFIER ':' value

    7 vetor_dec: data_type TK_IDENTIFIER '[' LIT_INTEGER ']'
    8          | data_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' vetor_value
    9          | data_type '$' TK_IDENTIFIER
   10          | data_type '$' TK_IDENTIFIER ':' vetor_value

   11 local_dec: var_dec
   12          | var_dec ';' local_dec
   13          | /* empty */

   14 vetor_value: value
   15            | value vetor_value

   16 func_dec: data_type TK_IDENTIFIER '(' parameters ')' local_dec block

   17 parameters: data_type TK_IDENTIFIER
   18           | data_type TK_IDENTIFIER ',' parameters
   19           | /* empty */

   20 block: '{' comands '}'

   21 comands: comand ';'
   22        | comand ';' comands
   23        | block
   24        | /* empty */

   25 block_ctrl: block
   26           | comand

   27 comand: TK_IDENTIFIER '=' expr
   28       | TK_IDENTIFIER '[' expr ']' '=' expr
   29       | KW_OUTPUT output
   30       | KW_INPUT TK_IDENTIFIER
   31       | KW_RETURN expr
   32       | flux_control
   33       | /* empty */

   34 output: expr
   35       | expr ',' output

   36 flux_control: KW_LOOP '(' expr ')' block_ctrl
   37             | KW_IF '(' expr ')' KW_THEN block_ctrl
   38             | KW_IF '(' expr ')' KW_THEN block_ctrl KW_ELSE block_ctrl

   39 expr: TK_IDENTIFIER
   40     | TK_IDENTIFIER '[' LIT_INTEGER ']'
   41     | TK_IDENTIFIER '(' func_param ')'
   42     | value
   43     | '(' expr ')'
   44     | expr '+' expr
   45     | expr '-' expr
   46     | expr '*' expr
   47     | expr '/' expr
   48     | expr OPERATOR_AND expr
   49     | expr OPERATOR_OR expr
   50     | expr OPERATOR_LE expr
   51     | expr OPERATOR_GE expr
   52     | expr OPERATOR_EQ expr
   53     | expr OPERATOR_NE expr
   54     | expr '<' expr
   55     | expr '>' expr
   56     | '*' TK_IDENTIFIER
   57     | '&' TK_IDENTIFIER

   58 func_param: TK_IDENTIFIER
   59           | TK_IDENTIFIER ',' func_param
   60           | value
   61           | value ',' func_param
   62           | /* empty */

   63 data_type: KW_WORD
   64          | KW_BYTE
   65          | KW_BOOL

   66 value: LIT_INTEGER
   67      | LIT_TRUE
   68      | LIT_FALSE
   69      | LIT_CHAR
   70      | LIT_STRING


Terminals, with rules where they appear

UNDEFINED (0) 0
TK_IDENTIFIER (1) 6 7 8 9 10 16 17 18 27 28 30 39 40 41 56 57 58 59
LIT_INTEGER (2) 7 8 40 66
LIT_FALSE (3) 68
LIT_TRUE (4) 67
LIT_CHAR (5) 69
LIT_STRING (6) 70
'$' (36) 9 10
'&' (38) 57
'(' (40) 16 36 37 38 41 43
')' (41) 16 36 37 38 41 43
'*' (42) 46 56
'+' (43) 44
',' (44) 18 35 59 61
'-' (45) 45
'/' (47) 47
':' (58) 6 8 10
';' (59) 3 4 12 21 22
'<' (60) 54
'=' (61) 27 28
'>' (62) 55
'[' (91) 7 8 28 40
']' (93) 7 8 28 40
'{' (123) 20
'}' (125) 20
KW_WORD (256) 63
KW_BOOL (258) 65
KW_BYTE (259) 64
KW_IF (261) 37 38
KW_THEN (262) 37 38
KW_ELSE (263) 38
KW_LOOP (264) 36
KW_INPUT (266) 30
KW_RETURN (267) 31
KW_OUTPUT (268) 29
OPERATOR_LE (270) 50
OPERATOR_GE (271) 51
OPERATOR_EQ (272) 52
OPERATOR_NE (273) 53
OPERATOR_AND (274) 48
OPERATOR_OR (275) 49
TOKEN_ERROR (290)
error (291)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
program (45)
    on left: 1 2, on right: 0 1
gl_dec (46)
    on left: 3 4 5, on right: 1
var_dec (47)
    on left: 6, on right: 3 11 12
vetor_dec (48)
    on left: 7 8 9 10, on right: 4
local_dec (49)
    on left: 11 12 13, on right: 12 16
vetor_value (50)
    on left: 14 15, on right: 8 10 15
func_dec (51)
    on left: 16, on right: 5
parameters (52)
    on left: 17 18 19, on right: 16 18
block (53)
    on left: 20, on right: 16 23 25
comands (54)
    on left: 21 22 23 24, on right: 20 22
block_ctrl (55)
    on left: 25 26, on right: 36 37 38
comand (56)
    on left: 27 28 29 30 31 32 33, on right: 21 22 26
output (57)
    on left: 34 35, on right: 29 35
flux_control (58)
    on left: 36 37 38, on right: 32
expr (59)
    on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56
    57, on right: 27 28 31 34 35 36 37 38 43 44 45 46 47 48 49 50 51
    52 53 54 55
func_param (60)
    on left: 58 59 60 61 62, on right: 41 59 61
data_type (61)
    on left: 63 64 65, on right: 6 7 8 9 10 16 17 18
value (62)
    on left: 66 67 68 69 70, on right: 6 14 15 42 60 61


state 0

    0 $accept: . program UNDEFINED

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 2 (program)

    program    go to state 4
    gl_dec     go to state 5
    var_dec    go to state 6
    vetor_dec  go to state 7
    func_dec   go to state 8
    data_type  go to state 9


state 1

   63 data_type: KW_WORD .

    $default  reduce using rule 63 (data_type)


state 2

   65 data_type: KW_BOOL .

    $default  reduce using rule 65 (data_type)


state 3

   64 data_type: KW_BYTE .

    $default  reduce using rule 64 (data_type)


state 4

    0 $accept: program . UNDEFINED

    UNDEFINED  shift, and go to state 10


state 5

    1 program: gl_dec . program

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 2 (program)

    program    go to state 11
    gl_dec     go to state 5
    var_dec    go to state 6
    vetor_dec  go to state 7
    func_dec   go to state 8
    data_type  go to state 9


state 6

    3 gl_dec: var_dec . ';'

    ';'  shift, and go to state 12


state 7

    4 gl_dec: vetor_dec . ';'

    ';'  shift, and go to state 13


state 8

    5 gl_dec: func_dec .

    $default  reduce using rule 5 (gl_dec)


state 9

    6 var_dec: data_type . TK_IDENTIFIER ':' value
    7 vetor_dec: data_type . TK_IDENTIFIER '[' LIT_INTEGER ']'
    8          | data_type . TK_IDENTIFIER '[' LIT_INTEGER ']' ':' vetor_value
    9          | data_type . '$' TK_IDENTIFIER
   10          | data_type . '$' TK_IDENTIFIER ':' vetor_value
   16 func_dec: data_type . TK_IDENTIFIER '(' parameters ')' local_dec block

    TK_IDENTIFIER  shift, and go to state 14
    '$'            shift, and go to state 15


state 10

    0 $accept: program UNDEFINED .

    $default  accept


state 11

    1 program: gl_dec program .

    $default  reduce using rule 1 (program)


state 12

    3 gl_dec: var_dec ';' .

    $default  reduce using rule 3 (gl_dec)


state 13

    4 gl_dec: vetor_dec ';' .

    $default  reduce using rule 4 (gl_dec)


state 14

    6 var_dec: data_type TK_IDENTIFIER . ':' value
    7 vetor_dec: data_type TK_IDENTIFIER . '[' LIT_INTEGER ']'
    8          | data_type TK_IDENTIFIER . '[' LIT_INTEGER ']' ':' vetor_value
   16 func_dec: data_type TK_IDENTIFIER . '(' parameters ')' local_dec block

    ':'  shift, and go to state 16
    '['  shift, and go to state 17
    '('  shift, and go to state 18


state 15

    9 vetor_dec: data_type '$' . TK_IDENTIFIER
   10          | data_type '$' . TK_IDENTIFIER ':' vetor_value

    TK_IDENTIFIER  shift, and go to state 19


state 16

    6 var_dec: data_type TK_IDENTIFIER ':' . value

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    value  go to state 25


state 17

    7 vetor_dec: data_type TK_IDENTIFIER '[' . LIT_INTEGER ']'
    8          | data_type TK_IDENTIFIER '[' . LIT_INTEGER ']' ':' vetor_value

    LIT_INTEGER  shift, and go to state 26


state 18

   16 func_dec: data_type TK_IDENTIFIER '(' . parameters ')' local_dec block

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 19 (parameters)

    parameters  go to state 27
    data_type   go to state 28


state 19

    9 vetor_dec: data_type '$' TK_IDENTIFIER .
   10          | data_type '$' TK_IDENTIFIER . ':' vetor_value

    ':'  shift, and go to state 29

    $default  reduce using rule 9 (vetor_dec)


state 20

   66 value: LIT_INTEGER .

    $default  reduce using rule 66 (value)


state 21

   68 value: LIT_FALSE .

    $default  reduce using rule 68 (value)


state 22

   67 value: LIT_TRUE .

    $default  reduce using rule 67 (value)


state 23

   69 value: LIT_CHAR .

    $default  reduce using rule 69 (value)


state 24

   70 value: LIT_STRING .

    $default  reduce using rule 70 (value)


state 25

    6 var_dec: data_type TK_IDENTIFIER ':' value .

    $default  reduce using rule 6 (var_dec)


state 26

    7 vetor_dec: data_type TK_IDENTIFIER '[' LIT_INTEGER . ']'
    8          | data_type TK_IDENTIFIER '[' LIT_INTEGER . ']' ':' vetor_value

    ']'  shift, and go to state 30


state 27

   16 func_dec: data_type TK_IDENTIFIER '(' parameters . ')' local_dec block

    ')'  shift, and go to state 31


state 28

   17 parameters: data_type . TK_IDENTIFIER
   18           | data_type . TK_IDENTIFIER ',' parameters

    TK_IDENTIFIER  shift, and go to state 32


state 29

   10 vetor_dec: data_type '$' TK_IDENTIFIER ':' . vetor_value

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    vetor_value  go to state 33
    value        go to state 34


state 30

    7 vetor_dec: data_type TK_IDENTIFIER '[' LIT_INTEGER ']' .
    8          | data_type TK_IDENTIFIER '[' LIT_INTEGER ']' . ':' vetor_value

    ':'  shift, and go to state 35

    $default  reduce using rule 7 (vetor_dec)


state 31

   16 func_dec: data_type TK_IDENTIFIER '(' parameters ')' . local_dec block

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 13 (local_dec)

    var_dec    go to state 36
    local_dec  go to state 37
    data_type  go to state 38


state 32

   17 parameters: data_type TK_IDENTIFIER .
   18           | data_type TK_IDENTIFIER . ',' parameters

    ','  shift, and go to state 39

    $default  reduce using rule 17 (parameters)


state 33

   10 vetor_dec: data_type '$' TK_IDENTIFIER ':' vetor_value .

    $default  reduce using rule 10 (vetor_dec)


state 34

   14 vetor_value: value .
   15            | value . vetor_value

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    $default  reduce using rule 14 (vetor_value)

    vetor_value  go to state 40
    value        go to state 34


state 35

    8 vetor_dec: data_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' . vetor_value

    LIT_INTEGER  shift, and go to state 20
    LIT_FALSE    shift, and go to state 21
    LIT_TRUE     shift, and go to state 22
    LIT_CHAR     shift, and go to state 23
    LIT_STRING   shift, and go to state 24

    vetor_value  go to state 41
    value        go to state 34


state 36

   11 local_dec: var_dec .
   12          | var_dec . ';' local_dec

    ';'  shift, and go to state 42

    $default  reduce using rule 11 (local_dec)


state 37

   16 func_dec: data_type TK_IDENTIFIER '(' parameters ')' local_dec . block

    '{'  shift, and go to state 43

    block  go to state 44


state 38

    6 var_dec: data_type . TK_IDENTIFIER ':' value

    TK_IDENTIFIER  shift, and go to state 45


state 39

   18 parameters: data_type TK_IDENTIFIER ',' . parameters

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 19 (parameters)

    parameters  go to state 46
    data_type   go to state 28


state 40

   15 vetor_value: value vetor_value .

    $default  reduce using rule 15 (vetor_value)


state 41

    8 vetor_dec: data_type TK_IDENTIFIER '[' LIT_INTEGER ']' ':' vetor_value .

    $default  reduce using rule 8 (vetor_dec)


state 42

   12 local_dec: var_dec ';' . local_dec

    KW_WORD  shift, and go to state 1
    KW_BOOL  shift, and go to state 2
    KW_BYTE  shift, and go to state 3

    $default  reduce using rule 13 (local_dec)

    var_dec    go to state 36
    local_dec  go to state 47
    data_type  go to state 38


state 43

   20 block: '{' . comands '}'

    KW_IF          shift, and go to state 48
    KW_LOOP        shift, and go to state 49
    KW_INPUT       shift, and go to state 50
    KW_RETURN      shift, and go to state 51
    KW_OUTPUT      shift, and go to state 52
    TK_IDENTIFIER  shift, and go to state 53
    '{'            shift, and go to state 43

    ';'       reduce using rule 33 (comand)
    $default  reduce using rule 24 (comands)

    block         go to state 54
    comands       go to state 55
    comand        go to state 56
    flux_control  go to state 57


state 44

   16 func_dec: data_type TK_IDENTIFIER '(' parameters ')' local_dec block .

    $default  reduce using rule 16 (func_dec)


state 45

    6 var_dec: data_type TK_IDENTIFIER . ':' value

    ':'  shift, and go to state 16


state 46

   18 parameters: data_type TK_IDENTIFIER ',' parameters .

    $default  reduce using rule 18 (parameters)


state 47

   12 local_dec: var_dec ';' local_dec .

    $default  reduce using rule 12 (local_dec)


state 48

   37 flux_control: KW_IF . '(' expr ')' KW_THEN block_ctrl
   38             | KW_IF . '(' expr ')' KW_THEN block_ctrl KW_ELSE block_ctrl

    '('  shift, and go to state 58


state 49

   36 flux_control: KW_LOOP . '(' expr ')' block_ctrl

    '('  shift, and go to state 59


state 50

   30 comand: KW_INPUT . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 60


state 51

   31 comand: KW_RETURN . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 65
    value  go to state 66


state 52

   29 comand: KW_OUTPUT . output

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    output  go to state 67
    expr    go to state 68
    value   go to state 66


state 53

   27 comand: TK_IDENTIFIER . '=' expr
   28       | TK_IDENTIFIER . '[' expr ']' '=' expr

    '='  shift, and go to state 69
    '['  shift, and go to state 70


state 54

   23 comands: block .

    $default  reduce using rule 23 (comands)


state 55

   20 block: '{' comands . '}'

    '}'  shift, and go to state 71


state 56

   21 comands: comand . ';'
   22        | comand . ';' comands

    ';'  shift, and go to state 72


state 57

   32 comand: flux_control .

    $default  reduce using rule 32 (comand)


state 58

   37 flux_control: KW_IF '(' . expr ')' KW_THEN block_ctrl
   38             | KW_IF '(' . expr ')' KW_THEN block_ctrl KW_ELSE block_ctrl

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 73
    value  go to state 66


state 59

   36 flux_control: KW_LOOP '(' . expr ')' block_ctrl

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 74
    value  go to state 66


state 60

   30 comand: KW_INPUT TK_IDENTIFIER .

    $default  reduce using rule 30 (comand)


state 61

   56 expr: '*' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 75


state 62

   39 expr: TK_IDENTIFIER .
   40     | TK_IDENTIFIER . '[' LIT_INTEGER ']'
   41     | TK_IDENTIFIER . '(' func_param ')'

    '['  shift, and go to state 76
    '('  shift, and go to state 77

    $default  reduce using rule 39 (expr)


state 63

   43 expr: '(' . expr ')'

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 78
    value  go to state 66


state 64

   57 expr: '&' . TK_IDENTIFIER

    TK_IDENTIFIER  shift, and go to state 79


state 65

   31 comand: KW_RETURN expr .
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 31 (comand)


state 66

   42 expr: value .

    $default  reduce using rule 42 (expr)


state 67

   29 comand: KW_OUTPUT output .

    $default  reduce using rule 29 (comand)


state 68

   34 output: expr .
   35       | expr . ',' output
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ','           shift, and go to state 92

    $default  reduce using rule 34 (output)


state 69

   27 comand: TK_IDENTIFIER '=' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 93
    value  go to state 66


state 70

   28 comand: TK_IDENTIFIER '[' . expr ']' '=' expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 94
    value  go to state 66


state 71

   20 block: '{' comands '}' .

    $default  reduce using rule 20 (block)


state 72

   21 comands: comand ';' .
   22        | comand ';' . comands

    KW_IF          shift, and go to state 48
    KW_LOOP        shift, and go to state 49
    KW_INPUT       shift, and go to state 50
    KW_RETURN      shift, and go to state 51
    KW_OUTPUT      shift, and go to state 52
    TK_IDENTIFIER  shift, and go to state 53
    '{'            shift, and go to state 43

    ';'       reduce using rule 33 (comand)
    '}'       reduce using rule 21 (comands)
    '}'       [reduce using rule 24 (comands)]
    $default  reduce using rule 21 (comands)

    block         go to state 54
    comands       go to state 95
    comand        go to state 56
    flux_control  go to state 57


state 73

   37 flux_control: KW_IF '(' expr . ')' KW_THEN block_ctrl
   38             | KW_IF '(' expr . ')' KW_THEN block_ctrl KW_ELSE block_ctrl
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 96


state 74

   36 flux_control: KW_LOOP '(' expr . ')' block_ctrl
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 97


state 75

   56 expr: '*' TK_IDENTIFIER .

    $default  reduce using rule 56 (expr)


state 76

   40 expr: TK_IDENTIFIER '[' . LIT_INTEGER ']'

    LIT_INTEGER  shift, and go to state 98


state 77

   41 expr: TK_IDENTIFIER '(' . func_param ')'

    TK_IDENTIFIER  shift, and go to state 99
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24

    $default  reduce using rule 62 (func_param)

    func_param  go to state 100
    value       go to state 101


state 78

   43 expr: '(' expr . ')'
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ')'           shift, and go to state 102


state 79

   57 expr: '&' TK_IDENTIFIER .

    $default  reduce using rule 57 (expr)


state 80

   49 expr: expr OPERATOR_OR . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 103
    value  go to state 66


state 81

   48 expr: expr OPERATOR_AND . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 104
    value  go to state 66


state 82

   54 expr: expr '<' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 105
    value  go to state 66


state 83

   55 expr: expr '>' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 106
    value  go to state 66


state 84

   53 expr: expr OPERATOR_NE . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 107
    value  go to state 66


state 85

   52 expr: expr OPERATOR_EQ . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 108
    value  go to state 66


state 86

   51 expr: expr OPERATOR_GE . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 109
    value  go to state 66


state 87

   50 expr: expr OPERATOR_LE . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 110
    value  go to state 66


state 88

   44 expr: expr '+' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 111
    value  go to state 66


state 89

   45 expr: expr '-' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 112
    value  go to state 66


state 90

   46 expr: expr '*' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 113
    value  go to state 66


state 91

   47 expr: expr '/' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 114
    value  go to state 66


state 92

   35 output: expr ',' . output

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    output  go to state 115
    expr    go to state 68
    value   go to state 66


state 93

   27 comand: TK_IDENTIFIER '=' expr .
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 27 (comand)


state 94

   28 comand: TK_IDENTIFIER '[' expr . ']' '=' expr
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91
    ']'           shift, and go to state 116


state 95

   22 comands: comand ';' comands .

    $default  reduce using rule 22 (comands)


state 96

   37 flux_control: KW_IF '(' expr ')' . KW_THEN block_ctrl
   38             | KW_IF '(' expr ')' . KW_THEN block_ctrl KW_ELSE block_ctrl

    KW_THEN  shift, and go to state 117


state 97

   36 flux_control: KW_LOOP '(' expr ')' . block_ctrl

    KW_IF          shift, and go to state 48
    KW_LOOP        shift, and go to state 49
    KW_INPUT       shift, and go to state 50
    KW_RETURN      shift, and go to state 51
    KW_OUTPUT      shift, and go to state 52
    TK_IDENTIFIER  shift, and go to state 53
    '{'            shift, and go to state 43

    $default  reduce using rule 33 (comand)

    block         go to state 118
    block_ctrl    go to state 119
    comand        go to state 120
    flux_control  go to state 57


state 98

   40 expr: TK_IDENTIFIER '[' LIT_INTEGER . ']'

    ']'  shift, and go to state 121


state 99

   58 func_param: TK_IDENTIFIER .
   59           | TK_IDENTIFIER . ',' func_param

    ','  shift, and go to state 122

    $default  reduce using rule 58 (func_param)


state 100

   41 expr: TK_IDENTIFIER '(' func_param . ')'

    ')'  shift, and go to state 123


state 101

   60 func_param: value .
   61           | value . ',' func_param

    ','  shift, and go to state 124

    $default  reduce using rule 60 (func_param)


state 102

   43 expr: '(' expr ')' .

    $default  reduce using rule 43 (expr)


state 103

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   49     | expr OPERATOR_OR expr .
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    '<'          shift, and go to state 82
    '>'          shift, and go to state 83
    OPERATOR_NE  shift, and go to state 84
    OPERATOR_EQ  shift, and go to state 85
    OPERATOR_GE  shift, and go to state 86
    OPERATOR_LE  shift, and go to state 87
    '+'          shift, and go to state 88
    '-'          shift, and go to state 89
    '*'          shift, and go to state 90
    '/'          shift, and go to state 91

    $default  reduce using rule 49 (expr)


state 104

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   48     | expr OPERATOR_AND expr .
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    '<'          shift, and go to state 82
    '>'          shift, and go to state 83
    OPERATOR_NE  shift, and go to state 84
    OPERATOR_EQ  shift, and go to state 85
    OPERATOR_GE  shift, and go to state 86
    OPERATOR_LE  shift, and go to state 87
    '+'          shift, and go to state 88
    '-'          shift, and go to state 89
    '*'          shift, and go to state 90
    '/'          shift, and go to state 91

    $default  reduce using rule 48 (expr)


state 105

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   54     | expr '<' expr .
   55     | expr . '>' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    '<'          error (nonassociative)
    '>'          error (nonassociative)
    OPERATOR_NE  error (nonassociative)
    OPERATOR_EQ  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    OPERATOR_LE  error (nonassociative)

    $default  reduce using rule 54 (expr)


state 106

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr
   55     | expr '>' expr .

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    '<'          error (nonassociative)
    '>'          error (nonassociative)
    OPERATOR_NE  error (nonassociative)
    OPERATOR_EQ  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    OPERATOR_LE  error (nonassociative)

    $default  reduce using rule 55 (expr)


state 107

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   53     | expr OPERATOR_NE expr .
   54     | expr . '<' expr
   55     | expr . '>' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    '<'          error (nonassociative)
    '>'          error (nonassociative)
    OPERATOR_NE  error (nonassociative)
    OPERATOR_EQ  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    OPERATOR_LE  error (nonassociative)

    $default  reduce using rule 53 (expr)


state 108

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   52     | expr OPERATOR_EQ expr .
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    '<'          error (nonassociative)
    '>'          error (nonassociative)
    OPERATOR_NE  error (nonassociative)
    OPERATOR_EQ  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    OPERATOR_LE  error (nonassociative)

    $default  reduce using rule 52 (expr)


state 109

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   51     | expr OPERATOR_GE expr .
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    '<'          error (nonassociative)
    '>'          error (nonassociative)
    OPERATOR_NE  error (nonassociative)
    OPERATOR_EQ  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    OPERATOR_LE  error (nonassociative)

    $default  reduce using rule 51 (expr)


state 110

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   50     | expr OPERATOR_LE expr .
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    '+'  shift, and go to state 88
    '-'  shift, and go to state 89
    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    '<'          error (nonassociative)
    '>'          error (nonassociative)
    OPERATOR_NE  error (nonassociative)
    OPERATOR_EQ  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    OPERATOR_LE  error (nonassociative)

    $default  reduce using rule 50 (expr)


state 111

   44 expr: expr . '+' expr
   44     | expr '+' expr .
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 44 (expr)


state 112

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   45     | expr '-' expr .
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    '*'  shift, and go to state 90
    '/'  shift, and go to state 91

    $default  reduce using rule 45 (expr)


state 113

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   46     | expr '*' expr .
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    $default  reduce using rule 46 (expr)


state 114

   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   47     | expr '/' expr .
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    $default  reduce using rule 47 (expr)


state 115

   35 output: expr ',' output .

    $default  reduce using rule 35 (output)


state 116

   28 comand: TK_IDENTIFIER '[' expr ']' . '=' expr

    '='  shift, and go to state 125


state 117

   37 flux_control: KW_IF '(' expr ')' KW_THEN . block_ctrl
   38             | KW_IF '(' expr ')' KW_THEN . block_ctrl KW_ELSE block_ctrl

    KW_IF          shift, and go to state 48
    KW_LOOP        shift, and go to state 49
    KW_INPUT       shift, and go to state 50
    KW_RETURN      shift, and go to state 51
    KW_OUTPUT      shift, and go to state 52
    TK_IDENTIFIER  shift, and go to state 53
    '{'            shift, and go to state 43

    $default  reduce using rule 33 (comand)

    block         go to state 118
    block_ctrl    go to state 126
    comand        go to state 120
    flux_control  go to state 57


state 118

   25 block_ctrl: block .

    $default  reduce using rule 25 (block_ctrl)


state 119

   36 flux_control: KW_LOOP '(' expr ')' block_ctrl .

    $default  reduce using rule 36 (flux_control)


state 120

   26 block_ctrl: comand .

    $default  reduce using rule 26 (block_ctrl)


state 121

   40 expr: TK_IDENTIFIER '[' LIT_INTEGER ']' .

    $default  reduce using rule 40 (expr)


state 122

   59 func_param: TK_IDENTIFIER ',' . func_param

    TK_IDENTIFIER  shift, and go to state 99
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24

    $default  reduce using rule 62 (func_param)

    func_param  go to state 127
    value       go to state 101


state 123

   41 expr: TK_IDENTIFIER '(' func_param ')' .

    $default  reduce using rule 41 (expr)


state 124

   61 func_param: value ',' . func_param

    TK_IDENTIFIER  shift, and go to state 99
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24

    $default  reduce using rule 62 (func_param)

    func_param  go to state 128
    value       go to state 101


state 125

   28 comand: TK_IDENTIFIER '[' expr ']' '=' . expr

    '*'            shift, and go to state 61
    TK_IDENTIFIER  shift, and go to state 62
    LIT_INTEGER    shift, and go to state 20
    LIT_FALSE      shift, and go to state 21
    LIT_TRUE       shift, and go to state 22
    LIT_CHAR       shift, and go to state 23
    LIT_STRING     shift, and go to state 24
    '('            shift, and go to state 63
    '&'            shift, and go to state 64

    expr   go to state 129
    value  go to state 66


state 126

   37 flux_control: KW_IF '(' expr ')' KW_THEN block_ctrl .
   38             | KW_IF '(' expr ')' KW_THEN block_ctrl . KW_ELSE block_ctrl

    KW_ELSE  shift, and go to state 130

    KW_ELSE   [reduce using rule 37 (flux_control)]
    $default  reduce using rule 37 (flux_control)


state 127

   59 func_param: TK_IDENTIFIER ',' func_param .

    $default  reduce using rule 59 (func_param)


state 128

   61 func_param: value ',' func_param .

    $default  reduce using rule 61 (func_param)


state 129

   28 comand: TK_IDENTIFIER '[' expr ']' '=' expr .
   44 expr: expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . OPERATOR_AND expr
   49     | expr . OPERATOR_OR expr
   50     | expr . OPERATOR_LE expr
   51     | expr . OPERATOR_GE expr
   52     | expr . OPERATOR_EQ expr
   53     | expr . OPERATOR_NE expr
   54     | expr . '<' expr
   55     | expr . '>' expr

    OPERATOR_OR   shift, and go to state 80
    OPERATOR_AND  shift, and go to state 81
    '<'           shift, and go to state 82
    '>'           shift, and go to state 83
    OPERATOR_NE   shift, and go to state 84
    OPERATOR_EQ   shift, and go to state 85
    OPERATOR_GE   shift, and go to state 86
    OPERATOR_LE   shift, and go to state 87
    '+'           shift, and go to state 88
    '-'           shift, and go to state 89
    '*'           shift, and go to state 90
    '/'           shift, and go to state 91

    $default  reduce using rule 28 (comand)


state 130

   38 flux_control: KW_IF '(' expr ')' KW_THEN block_ctrl KW_ELSE . block_ctrl

    KW_IF          shift, and go to state 48
    KW_LOOP        shift, and go to state 49
    KW_INPUT       shift, and go to state 50
    KW_RETURN      shift, and go to state 51
    KW_OUTPUT      shift, and go to state 52
    TK_IDENTIFIER  shift, and go to state 53
    '{'            shift, and go to state 43

    $default  reduce using rule 33 (comand)

    block         go to state 118
    block_ctrl    go to state 131
    comand        go to state 120
    flux_control  go to state 57


state 131

   38 flux_control: KW_IF '(' expr ')' KW_THEN block_ctrl KW_ELSE block_ctrl .

    $default  reduce using rule 38 (flux_control)
